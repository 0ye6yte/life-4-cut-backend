spring:
  profiles:
    default: 'local'
    group:
      local: 'common'
      dev: 'common'
      prod: 'common'

---
spring:
  config:
    activate:
      on-profile: 'common'
  jpa:
    database-platform: 'org.hibernate.dialect.MySQLDialect'
    database: MYSQL
    hibernate:
      ddl-auto: none
  servlet:
    multipart:
      max-file-size: 8MB
      max-request-size: 12MB

#logging:
#  level:
#    org.springframework.security: TRACE
#    org.hibernate.SQL: debug
#    org.springframework.orm.jpa: DEBUG
#    org.springframework.transaction: DEBUG

---
spring:
  config:
    activate:
      on-profile: 'local'
  security:
    oauth2:
      client:
        registration:
          kakao-login:
            client-id: 7e558adbc7b32496ba547bfbbaa19261
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
            authorization-grant-type: authorization_code
            client-name: Kakao
            scope:
              - account_email
          naver-login:
            client-id: myx8SAxD8JyClaajweE0
            client-secret: rj8VWbGrcU
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
            authorization-grant-type: authorization_code
            client-name: Naver
            scope:
              - email
          google-login:
            client-name: google
            client-id: 379665739489-bb0bph013bh0uqhchcrhqeggda5mh1nr.apps.googleusercontent.com
            client-secret: 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
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - email

        provider:
          kakao-login:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver-login:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          google-login:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v2/userinfo
            user-name-attribute: id


  datasource:
    url: "jdbc:mysql://gcp.connect.psdb.cloud/life-4-cut-development?sslMode=VERIFY_IDENTITY"
    username: "1iksybkoilnrhutzpuhg"
    password: ${SPRING_DATASOURCE_PASSWORD}
    hikari:
      maximum-pool-size: 5
      connection-timeout: 3000
      read-only: false
      pool-name: HikariCP
  data:
    redis:
      host: localhost
      port: 6380
      password: test
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

springdoc:
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    url: /docs/openapi3.json
    path: /docs/swagger

# todo. 노효주
# todo. CI/CD 할 때 auth에 있는 정보들 Github Secret에 잘 설정해주세요.
auth:
  jwt:
    secret: gewGE454568GYhiolLO2465TFY5215kFF45258YYhiolLO2465TFY2049gewGE454568GYhiolLO2465TFY5215kFF45258YYhiolLO2465TFY2049gewGE454568GYhiolLO2465TFY5215kFF45258YYhiolLO2465TFY2049gewGE454568GYhiolLO2465TFY5215kFF45258YYhiolLO2465TFY2049gewGE454568GYhiolLO2465TFY5215kFF45258YYhiolLO2465TFY2049gewGE454568GYhiolLO2465TFY5215kFF45258YYhiolLO2465TFY2049
    expires: 1h
    refresh-expires: 24h

aws:
  region: ap-northeast-2
  s3:
    bucket: life-4-cut-development

---
spring:
  config:
    activate:
      on-profile: 'dev'
  security:
    oauth2:
      client:
        registration:
          kakao-login:
            client-id: ${KAKAO_CLIENT_ID}
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
            authorization-grant-type: authorization_code
            client-name: Kakao
            scope:
              - account_email
          naver-login:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
            authorization-grant-type: authorization_code
            client-name: Naver
            scope:
              - email
          google-login:
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - email

        provider:
          kakao-login:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver-login:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          google-login:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v2/userinfo
            user-name-attribute: id


  datasource:
    url: ${MYSQL_URL}
    username: ${MYSQL_USER_NAME}
    password: ${MYSQL_PASSWORD}
    hikari:
      maximum-pool-size: 5
      connection-timeout: 3000
      read-only: false
      pool-name: HikariCP
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}

springdoc:
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    url: /docs/openapi3.json
    path: /docs/swagger

auth:
  jwt:
    secret: ${JWT_SECRET}
    expires: ${JWT_ACCESS_TOKEN_EXPIRES}
    refresh-expires: ${JWT_REFRESH_TOKEN_EXPIRES}

aws:
  region: ap-northeast-2
  s3:
    bucket: ${S3_BUCKET_NAME}



